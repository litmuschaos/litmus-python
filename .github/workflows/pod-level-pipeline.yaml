---
name: Pod-Level-Pipeline
on:
  workflow_dispatch:
    inputs:
      e2eTestRepo:
        default: "litmuschaos/litmus-e2e"
      e2eTestBranch:
        default: "master" 
      experimentImage:
        default: "litmuschaos/py-runner:ci"
      operatorImage:
        default: "litmuschaos/chaos-operator:ci"
      runnerImage:
        default: "litmuschaos/chaos-runner:ci"
      expTunnableNS:
        default: "experiments-tunnable"
      chaosNamespace:
        default: "litmus"
      imagePullPolicy:
        default: "Always"
      chaosServiceAccount:
        default: ""

jobs:       
  Pod_Delete_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"        
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.chaosNamespace }}"
      APP_NS: "${{ github.event.inputs.chaosNamespace }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      POD_LEVEL: "true"
      ARGS: "-c,python3 -u experiment"
      COMMAND: "/bin/bash"  

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          lfs: true
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      
    
      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        if: ${{ always() }}      
        run: make app-deploy
    
      - name: TCID-K3S-GENERIC-APP-POD-DELETE
        if: ${{ always() }}      
        run: make pod-delete
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup      
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        
