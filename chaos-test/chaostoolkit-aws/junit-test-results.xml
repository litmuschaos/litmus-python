<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="224" time="5.369"><testcase classname="tests.test_auth" file="tests/test_auth.py" line="38" name="test_signed_api_call_with_params" time="0.02683234214782715"></testcase><testcase classname="tests.test_auth" file="tests/test_auth.py" line="69" name="test_signed_api_call_with_body" time="0.006245851516723633"></testcase><testcase classname="tests.test_auth" file="tests/test_auth.py" line="98" name="test_create_client_from_cred_keys" time="0.008483409881591797"><system-err>[D 190919 17:53:19 __init__:73] Using default AWS role
[D 190919 17:53:19 __init__:73] Using default AWS role
</system-err></testcase><testcase classname="tests.test_auth" file="tests/test_auth.py" line="114" name="test_create_client_from_profile_name" time="0.008758783340454102"><system-err>[D 190919 17:53:19 __init__:73] Using default AWS role
[D 190919 17:53:19 __init__:73] Using default AWS role
</system-err></testcase><testcase classname="tests.test_auth" file="tests/test_auth.py" line="132" name="test_create_client_with_aws_role_arn" time="0.03417038917541504"><system-err>[I 190919 17:53:19 __init__:76] Assuming role: myarn
[I 190919 17:53:19 __init__:76] Assuming role: myarn
</system-err></testcase><testcase classname="tests.test_auth" file="tests/test_auth.py" line="163" name="test_create_client_with_aws_role_arn_and_profile" time="0.020093917846679688"><system-err>[I 190919 17:53:19 __init__:76] Assuming role: myarn
[I 190919 17:53:19 __init__:76] Assuming role: myarn
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="11" name="test_suspend_process_no_name_or_tag" time="0.0017321109771728516"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="18" name="test_suspend_process_both_name_and_tag_one" time="0.001359701156616211"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="27" name="test_suspend_process_invalid_process" time="0.001451730728149414"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="35" name="test_suspend_process_asg_names" time="0.005203962326049805"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
[D 190919 17:53:19 actions:230] Suspending process(es) on AutoScalingGroup-A
[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="56" name="test_suspend_process_asg_tags" time="0.005290985107421875"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
[D 190919 17:53:19 actions:230] Suspending process(es) on AutoScalingGroup-A
[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="85" name="test_suspend_process_asg_invalid_names" time="0.009763956069946289"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="97" name="test_suspend_process_asg_invalid_name" time="0.012594223022460938"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;, &apos;AutoScalingGroup-B&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="118" name="test_suspend_process_asg_invalid_tags" time="0.007417201995849609"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="129" name="test_resume_process_no_name_or_tag" time="0.005410194396972656"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="136" name="test_resume_process_both_name_and_tag" time="0.01194906234741211"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="145" name="test_resume_process_invalid_process" time="0.002089262008666992"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="153" name="test_resume_process_asg_names" time="0.005033731460571289"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
[D 190919 17:53:19 actions:281] Resuming process(es) [&apos;Launch&apos;] on AutoScalingGroup-A
[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="174" name="test_resume_process_asg_tags" time="0.005357027053833008"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
[D 190919 17:53:19 actions:281] Resuming process(es) [&apos;Launch&apos;] on AutoScalingGroup-A
[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="204" name="test_resume_process_asg_invalid_tags" time="0.0040400028228759766"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="215" name="test_resume_process_asg_invalid_names" time="0.004016876220703125"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="227" name="test_resume_process_asg_invalid_name" time="0.007138967514038086"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;, &apos;AutoScalingGroup-B&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="248" name="test_terminate_instances_no_asgs" time="0.0014965534210205078"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="255" name="test_terminate_instances_no_numbers" time="0.0014529228210449219"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="263" name="test_terminate_instances_count_pass" time="0.01064300537109375"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="311" name="test_terminate_instances_percent_pass" time="0.006911039352416992"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="356" name="test_terminate_instances_valid_az" time="0.00869297981262207"><system-err>[D 190919 17:53:19 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="390" name="test_terminate_instances_invalid_az" time="0.023756980895996094"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="424" name="test_terminate_instances_invalid_count" time="0.005972862243652344"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="449" name="test_terminate_instances_tags" time="0.00916910171508789"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="503" name="test_detach_instance_no_name_or_tag" time="0.0017299652099609375"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="510" name="test_detach_instance_both_name_and_tag_one" time="0.00168609619140625"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="519" name="test_detach_instance_no_count" time="0.018774747848510742"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="527" name="test_detach_instances_invalid_count" time="0.013382911682128906"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="557" name="test_detach_instances_count" time="0.018404006958007812"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="606" name="test_detach_instances_percent" time="0.01135873794555664"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="655" name="test_detach_instances_tags" time="0.006606578826904297"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="711" name="test_change_subnets_valid_names" time="0.005438089370727539"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="729" name="test_change_subnets_valid_tags" time="0.011216163635253906"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="754" name="test_change_subnets_no_subnet" time="0.0019030570983886719"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="761" name="test_detach_random_volume_asg_name" time="0.023396015167236328"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="804" name="test_detach_random_volume_asg_tags" time="0.04831957817077637"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="855" name="test_detach_random_volume_asg_invalid_name" time="0.004796504974365234"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="868" name="test_detach_random_volume_asg_invalid_tags" time="0.0070514678955078125"></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="880" name="test_attach_volume_asg_name" time="0.005204916000366211"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
[D 190919 17:53:20 actions:637] Attached volume vol-00000001 to instance i-987654321fabcde
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="927" name="test_attach_volume_asg_tags" time="0.006773233413696289"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
[D 190919 17:53:20 actions:637] Attached volume vol-00000001 to instance i-00000000000000001
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="986" name="test_asg_stop_random_instance_name" time="0.0066013336181640625"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_actions" file="tests/asg/test_asg_actions.py" line="1031" name="test_asg_stop_random_instance_tags" time="0.01077580451965332"><system-err>[D 190919 17:53:20 actions:506] Searching for ASG(s): [&apos;AutoScalingGroup-A&apos;].
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="14" name="test_desired_equals_healthy_needs_asg_names" time="0.0015261173248291016"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="20" name="test_wait_desired_equals_healthy_asg_names" time="0.0025882720947265625"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="26" name="test_desired_equals_healthy_tags_needs_tags" time="0.0015606880187988281"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="32" name="test_wait_desired_equals_healthy_tags_needs_tags" time="0.0046007633209228516"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="38" name="test_wait_desired_not_equals_healthy_tags_needs_tags" time="0.0016853809356689453"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="44" name="test_is_scaling_in_progress" time="0.007838964462280273"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="50" name="test_desired_equals_healthy_true" time="0.010766983032226562"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="67" name="test_desired_equals_healthy_false" time="0.0046253204345703125"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="84" name="test_desired_equals_healthy_empty" time="0.007195711135864258"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="96" name="test_wait_desired_equals_healthy_true" time="0.0049953460693359375"><system-err>[D 190919 17:53:20 probes:131] Waiting time was: 0
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="114" name="test_wait_desired_equals_healthy_timeout" time="0.00748896598815918"><system-err>[D 190919 17:53:20 probes:126] Timed out
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="134" name="test_desired_equals_healthy_tags_true" time="0.021462202072143555"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="205" name="test_desired_equals_healthy_tags_false" time="0.014735937118530273"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="276" name="test_wait_desired_equals_healthy_tags_true" time="0.0070307254791259766"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
[D 190919 17:53:20 probes:212] {&apos;AutoScalingGroups&apos;: [{&apos;AutoScalingGroupName&apos;: &apos;AutoScalingGroup1&apos;, &apos;DesiredCapacity&apos;: 1, &apos;Instances&apos;: [{&apos;HealthStatus&apos;: &apos;Healthy&apos;, &apos;LifecycleState&apos;: &apos;InService&apos;}], &apos;Tags&apos;: [{&apos;ResourceId&apos;: &apos;AutoScalingGroup1&apos;, &apos;Key&apos;: &apos;Application&apos;, &apos;Value&apos;: &apos;mychaosapp&apos;}]}]}
[D 190919 17:53:20 probes:222] Waiting time was: 0
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="347" name="test_wait_desired_equals_healthy_tags_false" time="0.02257823944091797"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
[D 190919 17:53:20 probes:212] {&apos;AutoScalingGroups&apos;: [{&apos;AutoScalingGroupName&apos;: &apos;AutoScalingGroup1&apos;, &apos;DesiredCapacity&apos;: 1, &apos;Instances&apos;: [{&apos;HealthStatus&apos;: &apos;Unhealthy&apos;, &apos;LifecycleState&apos;: &apos;InService&apos;}], &apos;Tags&apos;: [{&apos;ResourceId&apos;: &apos;AutoScalingGroup1&apos;, &apos;Key&apos;: &apos;Application&apos;, &apos;Value&apos;: &apos;mychaosapp&apos;}]}]}
[D 190919 17:53:20 probes:216] Timed out
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="418" name="test_wait_desired_not_equals_healthy_tags_true" time="0.016173124313354492"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;, &apos;AutoScalingGroup3&apos;]
[D 190919 17:53:20 probes:166] {&apos;AutoScalingGroups&apos;: [{&apos;AutoScalingGroupName&apos;: &apos;AutoScalingGroup1&apos;, &apos;DesiredCapacity&apos;: 1, &apos;Instances&apos;: [{&apos;HealthStatus&apos;: &apos;Unhealthy&apos;, &apos;LifecycleState&apos;: &apos;InService&apos;}], &apos;Tags&apos;: [{&apos;ResourceId&apos;: &apos;AutoScalingGroup1&apos;, &apos;Key&apos;: &apos;Application&apos;, &apos;Value&apos;: &apos;mychaosapp&apos;}]}]}
[D 190919 17:53:20 probes:176] Waiting time was: 0
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="490" name="test_wait_desired_not_equals_healthy_tags_false" time="0.016341447830200195"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
[D 190919 17:53:20 probes:166] {&apos;AutoScalingGroups&apos;: [{&apos;AutoScalingGroupName&apos;: &apos;AutoScalingGroup1&apos;, &apos;DesiredCapacity&apos;: 1, &apos;Instances&apos;: [{&apos;HealthStatus&apos;: &apos;Healthy&apos;, &apos;LifecycleState&apos;: &apos;InService&apos;}], &apos;Tags&apos;: [{&apos;ResourceId&apos;: &apos;AutoScalingGroup1&apos;, &apos;Key&apos;: &apos;Application&apos;, &apos;Value&apos;: &apos;mychaosapp&apos;}]}]}
[D 190919 17:53:20 probes:170] Timed out
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="547" name="test_is_scaling_in_progress_true" time="0.0579683780670166"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
[D 190919 17:53:20 probes:250] Scaling activities in progress: True
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="590" name="test_is_scaling_in_progress_false" time="0.004189014434814453"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup1&apos;]
[D 190919 17:53:20 probes:253] Scaling activities in progress: False
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="633" name="test_is_process_suspended_names_true" time="0.0041179656982421875"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="650" name="test_is_process_suspended_names_false" time="0.005555152893066406"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="665" name="test_is_process_suspended_tags" time="0.005118846893310547"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup-A&apos;]
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="689" name="test_has_subnets_names_valid" time="0.009044170379638672"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="720" name="test_has_subnets_tags_valid" time="0.0076944828033447266"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup-A&apos;, &apos;AutoScalingGroup-B&apos;]
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="762" name="test_has_subnets_names_invalid" time="0.0050678253173828125"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="793" name="test_has_subnets_tags_invalid" time="0.011116981506347656"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup-A&apos;, &apos;AutoScalingGroup-B&apos;]
</system-err></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="835" name="test_has_subnets_no_subnet" time="0.0016713142395019531"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="842" name="test_describe_auto_scaling_groups_names" time="0.005476713180541992"></testcase><testcase classname="tests.asg.test_asg_probes" file="tests/asg/test_asg_probes.py" line="859" name="test_describe_auto_scaling_groups_tags" time="0.007916927337646484"><system-err>[D 190919 17:53:20 probes:367] filtered groups: [&apos;AutoScalingGroup-A&apos;, &apos;AutoScalingGroup-B&apos;]
</system-err></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="15" name="test_aws_lambda_put_function_concurrency" time="0.008089065551757812"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="27" name="test_aws_lambda_put_function_concurrency_empty_string" time="0.005166292190551758"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="37" name="test_aws_lambda_put_function_concurrency_failedactivity" time="0.0057220458984375"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="49" name="test_aws_lambda_delete_function_concurrency" time="0.005912065505981445"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="59" name="test_aws_lambda_invoke_no_args" time="0.06543731689453125"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="80" name="test_aws_lambda_invoke_with_args" time="0.014411211013793945"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="111" name="test_aws_lambda_invoke_failed" time="0.0041539669036865234"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="126" name="test_aws_lambda_invoke_empty_response_payload" time="0.0059299468994140625"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="146" name="test_aws_lambda_put_function_timeout" time="0.0058248043060302734"></testcase><testcase classname="tests.awslambda.test_awslambda_actions" file="tests/awslambda/test_awslambda_actions.py" line="158" name="test_aws_lambda_put_function_memory_size" time="0.004302501678466797"></testcase><testcase classname="tests.awslambda.test_awslambda_probes" file="tests/awslambda/test_awslambda_probes.py" line="8" name="test_aws_lambda_get_function_concurrency" time="0.00683903694152832"></testcase><testcase classname="tests.awslambda.test_awslambda_probes" file="tests/awslambda/test_awslambda_probes.py" line="17" name="test_aws_lambda_get_function_timeout" time="0.004721641540527344"></testcase><testcase classname="tests.awslambda.test_awslambda_probes" file="tests/awslambda/test_awslambda_probes.py" line="32" name="test_aws_lambda_get_function_memory_size" time="0.00445103645324707"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="11" name="test_cloudwatch_put_rule" time="0.006495952606201172"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="33" name="test_cloudwatch_put_rule_targets" time="0.011852264404296875"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="49" name="test_cloudwatch_disable_rule" time="0.024634838104248047"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="58" name="test_cloudwatch_enable_rule" time="0.0030410289764404297"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="67" name="test_cloudwatch_delete_rule" time="0.0034487247467041016"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="77" name="test_cloudwatch_delete_rule_force" time="0.0038454532623291016"><system-err>[D 190919 17:53:21 actions:113] Removing 3 targets from rule my-rule: [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;]
</system-err></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="92" name="test_cloudwatch_remove_rule_targets" time="0.007056713104248047"><system-err>[D 190919 17:53:21 actions:113] Removing 3 targets from rule my-rule: [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;]
</system-err></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_actions" file="tests/cloudwatch/test_cloudwatch_actions.py" line="102" name="test_cloudwatch_remove_rule_targets_all" time="0.00580596923828125"><system-err>[D 190919 17:53:21 actions:113] Removing 3 targets from rule my-rule: [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;]
</system-err></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_probes" file="tests/cloudwatch/test_cloudwatch_probes.py" line="11" name="test_cloudwatch_get_alarm_state_value_ok" time="0.0035848617553710938"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_probes" file="tests/cloudwatch/test_cloudwatch_probes.py" line="29" name="test_cloudwatch_get_alarm_state_value_not_found" time="0.004819154739379883"></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_probes" file="tests/cloudwatch/test_cloudwatch_probes.py" line="42" name="test_cloudwatch_get_metric_statistics_ok" time="0.023688077926635742"><system-err>[D 190919 17:53:21 probes:79] Request arguments: {&apos;Namespace&apos;: &apos;AWS/Lambda&apos;, &apos;MetricName&apos;: &apos;Invocations&apos;, &apos;Dimensions&apos;: [{&apos;Name&apos;: &apos;FunctionName&apos;, &apos;Value&apos;: &apos;MyFunction&apos;}], &apos;StartTime&apos;: datetime.datetime(2015, 1, 1, 15, 12, tzinfo=datetime.timezone.utc), &apos;EndTime&apos;: datetime.datetime(2015, 1, 1, 15, 14, tzinfo=datetime.timezone.utc), &apos;Period&apos;: 120, &apos;Statistics&apos;: [&apos;Sum&apos;], &apos;Unit&apos;: &apos;Count&apos;}
[D 190919 17:53:21 probes:91] Response: {&apos;Datapoints&apos;: [{&apos;Sum&apos;: 4753.0}]}
</system-err></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_probes" file="tests/cloudwatch/test_cloudwatch_probes.py" line="87" name="test_cloudwatch_get_metric_statistics_extended_ok" time="0.009105205535888672"><system-err>[D 190919 17:53:21 probes:79] Request arguments: {&apos;Namespace&apos;: &apos;AWS/Lambda&apos;, &apos;MetricName&apos;: &apos;Invocations&apos;, &apos;Dimensions&apos;: [{&apos;Name&apos;: &apos;FunctionName&apos;, &apos;Value&apos;: &apos;MyFunction&apos;}], &apos;StartTime&apos;: datetime.datetime(2015, 1, 1, 15, 12, tzinfo=datetime.timezone.utc), &apos;EndTime&apos;: datetime.datetime(2015, 1, 1, 15, 14, tzinfo=datetime.timezone.utc), &apos;Period&apos;: 120, &apos;ExtendedStatistics&apos;: [&apos;p99&apos;]}
[D 190919 17:53:21 probes:91] Response: {&apos;Datapoints&apos;: [{&apos;ExtendedStatistics&apos;: {&apos;p99&apos;: 4753.0}}]}
</system-err></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_probes" file="tests/cloudwatch/test_cloudwatch_probes.py" line="131" name="test_cloudwatch_get_metric_statistics_no_datapoints" time="0.00963282585144043"><system-err>[D 190919 17:53:21 probes:79] Request arguments: {&apos;Namespace&apos;: &apos;AWS/Lambda&apos;, &apos;MetricName&apos;: &apos;Invocations&apos;, &apos;Dimensions&apos;: [{&apos;Name&apos;: &apos;FunctionName&apos;, &apos;Value&apos;: &apos;MyFunction&apos;}], &apos;StartTime&apos;: datetime.datetime(2015, 1, 1, 15, 12, tzinfo=datetime.timezone.utc), &apos;EndTime&apos;: datetime.datetime(2015, 1, 1, 15, 14, tzinfo=datetime.timezone.utc), &apos;Period&apos;: 120, &apos;Statistics&apos;: [&apos;Sum&apos;], &apos;Unit&apos;: &apos;Count&apos;}
</system-err></testcase><testcase classname="tests.cloudwatch.test_cloudwatch_probes" file="tests/cloudwatch/test_cloudwatch_probes.py" line="173" name="test_cloudwatch_get_metric_statistics_bad_response" time="0.010971784591674805"><system-err>[D 190919 17:53:21 probes:79] Request arguments: {&apos;Namespace&apos;: &apos;AWS/Lambda&apos;, &apos;MetricName&apos;: &apos;Invocations&apos;, &apos;Dimensions&apos;: [{&apos;Name&apos;: &apos;FunctionName&apos;, &apos;Value&apos;: &apos;MyFunction&apos;}], &apos;StartTime&apos;: datetime.datetime(2015, 1, 1, 15, 12, tzinfo=datetime.timezone.utc), &apos;EndTime&apos;: datetime.datetime(2015, 1, 1, 15, 14, tzinfo=datetime.timezone.utc), &apos;Period&apos;: 120, &apos;Statistics&apos;: [&apos;Sum&apos;], &apos;Unit&apos;: &apos;Count&apos;}
[D 190919 17:53:21 probes:91] Response: {&apos;Datapoints&apos;: [{&apos;some&apos;: &apos;value&apos;}]}
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="13" name="test_stop_instance" time="0.003802776336669922"><system-err>[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-1234567890abcdef0&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="28" name="test_stop_spot_instance" time="0.004594326019287109"><system-err>[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;defaultdict(typing.List, {&apos;spot&apos;: [&apos;i-1234567890abcdef0&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:542] Canceling spot requests: [&apos;sir-abcdef01&apos;]
[D 190919 17:53:21 actions:546] Terminating spot instances: [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="47" name="test_stop_instance_can_be_forced" time="0.003624439239501953"><system-err>[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-1234567890abcdef0&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="62" name="test_stop_spot_instance_can_be_forced" time="0.004106760025024414"><system-err>[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;defaultdict(typing.List, {&apos;spot&apos;: [&apos;i-1234567890abcdef0&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:542] Canceling spot requests: [&apos;sir-abcdef01&apos;]
[D 190919 17:53:21 actions:546] Terminating spot instances: [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="81" name="test_stop_instances" time="0.0073549747467041016"><system-err>[D 190919 17:53:21 actions:102] Picked EC2 instances &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-1234567890abcdef0&apos;], &apos;spot&apos;: [&apos;i-987654321fedcba&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-1234567890abcdef0&apos;]
[D 190919 17:53:21 actions:542] Canceling spot requests: [&apos;sir-abcdef01&apos;]
[D 190919 17:53:21 actions:546] Terminating spot instances: [&apos;i-987654321fedcba&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="108" name="test_stop_random_instance_in_az" time="0.005072832107543945"><system-err>[W 190919 17:53:21 actions:40] Based on configuration provided I am going to stop a random instance in AZ us-west-1!
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-1&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;{&apos;normal&apos;: [&apos;i-987654321fedcba&apos;]}&apos; from AZ &apos;us-west-1&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-987654321fedcba&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="126" name="test_stop_random_needs_instance_id_or_az" time="0.0014011859893798828"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="134" name="test_stop_all_instances_in_az" time="0.007265806198120117"><system-err>[W 190919 17:53:21 actions:83] Based on configuration provided I am going to stop all instances in AZ us-west-1!
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-1&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-123456789abcdef&apos;, &apos;InstanceLifecycle&apos;: &apos;spot&apos;, &apos;SpotInstanceRequestId&apos;: &apos;sir-abcdef01&apos;}]}]}
[D 190919 17:53:21 actions:102] Picked EC2 instances &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;], &apos;spot&apos;: [&apos;i-123456789abcdef&apos;]})&apos; from AZ &apos;us-west-1&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-987654321fedcba&apos;]
[D 190919 17:53:21 actions:542] Canceling spot requests: [&apos;sir-abcdef01&apos;]
[D 190919 17:53:21 actions:546] Terminating spot instances: [&apos;i-123456789abcdef&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="164" name="test_stop_all_instances_needs_instance_id_or_az" time="0.0017635822296142578"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="172" name="test_stop_all_instances_may_not_have_any_instances" time="0.003100156784057617"><system-err>[W 190919 17:53:21 actions:83] Based on configuration provided I am going to stop all instances in AZ us-west-1!
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-1&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: []}]}
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="184" name="test_stop_instance_by_specific_filters" time="0.004784345626831055"><system-err>[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;instance-state-name&apos;, &apos;Values&apos;: [&apos;running&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;eksctl.cluster.k8s.io/v1alpha1/cluster-name&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;kubernetes.io/cluster/chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;owned&apos;]}, {&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:102] Picked EC2 instances &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;]})&apos; from AZ &apos;us-west-2&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-987654321fedcba&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="229" name="test_stop_instance_with_no_lifecycle" time="0.003703594207763672"><system-err>[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-1234567890abcdef0&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="243" name="test_stop_normal_instance" time="0.0034368038177490234"><system-err>[D 190919 17:53:21 actions:59] Picked EC2 instance &apos;defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-1234567890abcdef0&apos;]})&apos; from AZ &apos;None&apos; to be stopped
[D 190919 17:53:21 actions:527] Stopping instances: [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="263" name="test_terminate_instance_no_values" time="0.001184225082397461"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="270" name="test_terminate_instance_az_no_instances" time="0.00341033935546875"><system-err>[W 190919 17:53:21 actions:129] Based on configuration provided I am going to terminate a random instance in AZ us-west-2!
[D 190919 17:53:21 actions:137] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: []}]}
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="283" name="test_terminate_normal_instance" time="0.0037589073181152344"><system-err>[D 190919 17:53:21 actions:567] Terminating normal instance(s): [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="295" name="test_terminate_spot_instance" time="0.007147073745727539"><system-err>[D 190919 17:53:21 actions:567] Terminating spot instance(s): [&apos;i-1234567890abcdef0&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="311" name="test_terminate_random_az_instance" time="0.005726814270019531"><system-err>[W 190919 17:53:21 actions:129] Based on configuration provided I am going to terminate a random instance in AZ us-west-1!
[D 190919 17:53:21 actions:137] Looking for instances in AZ: us-west-1
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-1&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:146] Instance selected: {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;]}
[D 190919 17:53:21 actions:567] Terminating normal instance(s): [&apos;i-987654321fedcba&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="324" name="test_terminate_instance_by_filters" time="0.004925251007080078"><system-err>[D 190919 17:53:21 actions:137] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;instance-state-name&apos;, &apos;Values&apos;: [&apos;running&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;kubernetes.io/cluster/chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;owned&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;eksctl.cluster.k8s.io/v1alpha1/cluster-name&apos;]}, {&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:146] Instance selected: {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;]}
[D 190919 17:53:21 actions:567] Terminating normal instance(s): [&apos;i-987654321fedcba&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="353" name="test_terminate_instances_no_values" time="0.001180410385131836"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="360" name="test_terminate_instances_az_no_instances" time="0.003233194351196289"><system-err>[W 190919 17:53:21 actions:175] Based on configuration provided I am going to terminate all instances in AZ us-west-2!
[D 190919 17:53:21 actions:183] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: []}]}
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="374" name="test_terminate_normal_instances" time="0.003924846649169922"><system-err>[D 190919 17:53:21 actions:567] Terminating normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="388" name="test_terminate_spot_instances" time="0.004042148590087891"><system-err>[D 190919 17:53:21 actions:567] Terminating spot instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="409" name="test_terminate_random_az_instances" time="0.004396200180053711"><system-err>[W 190919 17:53:21 actions:175] Based on configuration provided I am going to terminate all instances in AZ us-west-1!
[D 190919 17:53:21 actions:183] Looking for instances in AZ: us-west-1
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-1&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-392024ac3252ecb&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:193] Instances in AZ us-west-1 selected: defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]})}.
[D 190919 17:53:21 actions:567] Terminating normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="424" name="test_terminate_instances_by_filters" time="0.00458979606628418"><system-err>[D 190919 17:53:21 actions:183] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;instance-state-name&apos;, &apos;Values&apos;: [&apos;running&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;kubernetes.io/cluster/chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;owned&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;eksctl.cluster.k8s.io/v1alpha1/cluster-name&apos;]}, {&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-392024ac3252ecb&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:193] Instances in AZ us-west-2 selected: defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]})}.
[D 190919 17:53:21 actions:567] Terminating normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="452" name="test_start_instances_by_id" time="0.0054013729095458984"><system-err>[D 190919 17:53:21 actions:587] Starting normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="467" name="test_start_instances_by_filter" time="0.009002923965454102"><system-err>[D 190919 17:53:21 actions:229] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;instance-state-name&apos;, &apos;Values&apos;: [&apos;running&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;kubernetes.io/cluster/chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;owned&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;eksctl.cluster.k8s.io/v1alpha1/cluster-name&apos;]}, {&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-abcdef123456789&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:239] Instances in AZ us-west-2 selected: defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]})}.
[D 190919 17:53:21 actions:587] Starting normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="495" name="test_start_instances_by_az" time="0.004899740219116211"><system-err>[W 190919 17:53:21 actions:220] Based on configuration provided I am going to start all instances in AZ us-west-2!
[D 190919 17:53:21 actions:229] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-abcdef123456789&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:239] Instances in AZ us-west-2 selected: defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]})}.
[D 190919 17:53:21 actions:587] Starting normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="512" name="test_restart_instances_by_id" time="0.003917217254638672"><system-err>[D 190919 17:53:21 actions:600] Restarting normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-392024ac3252ecb&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="527" name="test_restart_instances_by_filter" time="0.004539966583251953"><system-err>[D 190919 17:53:21 actions:274] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;instance-state-name&apos;, &apos;Values&apos;: [&apos;running&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;kubernetes.io/cluster/chaos-cluster&apos;]}, {&apos;Name&apos;: &apos;tag-value&apos;, &apos;Values&apos;: [&apos;owned&apos;]}, {&apos;Name&apos;: &apos;tag-key&apos;, &apos;Values&apos;: [&apos;eksctl.cluster.k8s.io/v1alpha1/cluster-name&apos;]}, {&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-abcdef123456789&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:284] Instances in AZ us-west-2 selected: defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]})}.
[D 190919 17:53:21 actions:600] Restarting normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="555" name="test_restart_instances_by_az" time="0.004036903381347656"><system-err>[W 190919 17:53:21 actions:265] Based on configuration provided I am going to restart all instances in AZ us-west-2!
[D 190919 17:53:21 actions:274] Looking for instances in AZ: us-west-2
[D 190919 17:53:21 actions:377] EC2 instances query: [{&apos;Name&apos;: &apos;availability-zone&apos;, &apos;Values&apos;: [&apos;us-west-2&apos;]}]
[D 190919 17:53:21 actions:379] Instances matching the filter query: {&apos;Reservations&apos;: [{&apos;Instances&apos;: [{&apos;InstanceId&apos;: &apos;i-987654321fedcba&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}, {&apos;InstanceId&apos;: &apos;i-abcdef123456789&apos;, &apos;InstanceLifecycle&apos;: &apos;normal&apos;}]}]}
[D 190919 17:53:21 actions:284] Instances in AZ us-west-2 selected: defaultdict(typing.List, {&apos;normal&apos;: [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]})}.
[D 190919 17:53:21 actions:600] Restarting normal instance(s): [&apos;i-987654321fedcba&apos;, &apos;i-abcdef123456789&apos;]
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="572" name="test_detach_random_volume_ec2_id" time="0.003690958023071289"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="608" name="test_detach_random_volume_ec2_filter" time="0.0033407211303710938"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="646" name="test_detach_random_volume_ec2_invalid_id" time="0.0038878917694091797"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="659" name="test_detach_random_volume_ec2_invalid_filters" time="0.006349086761474609"></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="674" name="test_attach_volume_ec2_id" time="0.005674123764038086"><system-err>[D 190919 17:53:21 actions:654] Attached volume vol-00000001 to instance i-987654321fedcba
</system-err></testcase><testcase classname="tests.ec2.test_ec2_actions" file="tests/ec2/test_ec2_actions.py" line="718" name="test_attach_volume_ec2_filter" time="0.004051923751831055"><system-err>[D 190919 17:53:21 actions:654] Attached volume vol-00000001 to instance i-987654321fedcba
</system-err></testcase><testcase classname="tests.ec2.test_ec2_probes" file="tests/ec2/test_ec2_probes.py" line="10" name="test_describe_instances" time="0.0026726722717285156"></testcase><testcase classname="tests.ec2.test_ec2_probes" file="tests/ec2/test_ec2_probes.py" line="19" name="test_count_instances" time="0.003880023956298828"></testcase><testcase classname="tests.ec2.test_ec2_probes" file="tests/ec2/test_ec2_probes.py" line="28" name="test_instance_state_no_state" time="0.0010862350463867188"></testcase><testcase classname="tests.ec2.test_ec2_probes" file="tests/ec2/test_ec2_probes.py" line="35" name="test_instance_state_no_query" time="0.14981675148010254"><system-err>[D 190919 17:53:21 __init__:73] Using default AWS role
</system-err></testcase><testcase classname="tests.ec2.test_ec2_probes" file="tests/ec2/test_ec2_probes.py" line="43" name="test_instance_state" time="0.004461050033569336"></testcase><testcase classname="tests.ec2.test_ec2_probes" file="tests/ec2/test_ec2_probes.py" line="60" name="test_instance_state_filters" time="0.0028600692749023438"></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="8" name="test_stop_random_tasks_no_cluster" time="0.014608144760131836"><system-err>[D 190919 17:53:21 __init__:73] Using default AWS role
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="13" name="test_stop_random_tasks_no_count_or_percent" time="0.007947683334350586"><system-err>[D 190919 17:53:21 __init__:73] Using default AWS role
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="18" name="test_stop_random_tasks_both_count_and_percent" time="0.012309551239013672"><system-err>[D 190919 17:53:21 __init__:73] Using default AWS role
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="23" name="test_stop_random_tasks_count_too_high" time="0.0046041011810302734"></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="42" name="test_stop_random_tasks_count_no_service" time="0.012256860733032227"><system-err>[D 190919 17:53:21 actions:70] Stopping ECS task: arn:aws:ecs:us-east-1:012345678910:task/16fd2706-8baf-433b-82eb-8c7fada847da
[D 190919 17:53:21 actions:70] Stopping ECS task: arn:aws:ecs:us-east-1:012345678910:task/84th9568-3tth-55g1-35ki-4o9amby245lk
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="61" name="test_stop_random_tasks_percent_no_service" time="0.008840799331665039"><system-err>[D 190919 17:53:21 actions:70] Stopping ECS task: arn:aws:ecs:us-east-1:012345678910:task/84th9568-3tth-55g1-35ki-4o9amby245lk
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="89" name="test_stop_random_tasks_percent_yes_service" time="0.008096456527709961"><system-err>[D 190919 17:53:21 actions:70] Stopping ECS task: arn:aws:ecs:us-east-1:012345678910:task/16fd2706-8baf-433b-82eb-8c7fada847da
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="118" name="test_stop_random_tasks_count_yes_service" time="0.008673429489135742"><system-err>[D 190919 17:53:21 actions:70] Stopping ECS task: arn:aws:ecs:us-east-1:012345678910:task/84th9568-3tth-55g1-35ki-4o9amby245lk
[D 190919 17:53:21 actions:70] Stopping ECS task: arn:aws:ecs:us-east-1:012345678910:task/16fd2706-8baf-433b-82eb-8c7fada847da
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="138" name="test_stop_task" time="0.006509065628051758"><system-err>[D 190919 17:53:21 actions:99] Stopping ECS task: 16fd2706-8baf-433b-82eb-8c7fada847da
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="150" name="test_stop_tasks" time="0.007488250732421875"><system-err>[D 190919 17:53:21 actions:99] Stopping ECS task: 16fd2706-8baf-433b-82eb-8c7fada847da
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="170" name="test_delete_service" time="0.007946968078613281"><system-err>[D 190919 17:53:21 actions:136] Updating ECS service: my-http-service
[D 190919 17:53:21 actions:144] Deleting ECS service: my-http-service
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="187" name="test_delete_services" time="0.009871482849121094"><system-err>[D 190919 17:53:21 actions:136] Updating ECS service: my-db-service
[D 190919 17:53:21 actions:144] Deleting ECS service: my-db-service
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="216" name="test_delete_filtered_service" time="0.008219718933105469"><system-err>[D 190919 17:53:21 actions:136] Updating ECS service: my-db-service
[D 190919 17:53:21 actions:144] Deleting ECS service: my-db-service
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="242" name="test_delete_cluster" time="0.005752086639404297"><system-err>[D 190919 17:53:21 actions:155] Deleting ECS cluster: ecs-cluster
</system-err></testcase><testcase classname="tests.ecs.test_ecs_actions" file="tests/ecs/test_ecs_actions.py" line="252" name="test_deregister_container_instance" time="0.005915164947509766"><system-err>[D 190919 17:53:21 actions:171] Deregistering container instance &apos;arn:aws:ecs:us-east-1:012345678910:container-instance/myinst&apos; from ECS cluster: ecs-cluster
</system-err></testcase><testcase classname="tests.ecs.test_ecs_probes" file="tests/ecs/test_ecs_probes.py" line="10" name="test_ecs_service_is_not_deploying" time="0.004561185836791992"></testcase><testcase classname="tests.ecs.test_ecs_probes" file="tests/ecs/test_ecs_probes.py" line="29" name="test_ecs_service_is_deploying" time="0.00554203987121582"></testcase><testcase classname="tests.ecs.test_ecs_probes" file="tests/ecs/test_ecs_probes.py" line="49" name="test_error_checking_ecs_service_is_not_deploying" time="0.005983829498291016"></testcase><testcase classname="tests.ecs.test_ecs_probes" file="tests/ecs/test_ecs_probes.py" line="70" name="test_describe_clusters" time="0.005945682525634766"></testcase><testcase classname="tests.ecs.test_ecs_probes" file="tests/ecs/test_ecs_probes.py" line="86" name="test_describe_service" time="0.005327939987182617"></testcase><testcase classname="tests.ecs.test_ecs_probes" file="tests/ecs/test_ecs_probes.py" line="104" name="test_describe_tasks" time="0.006302833557128906"></testcase><testcase classname="tests.eks.test_eks_actions" file="tests/eks/test_eks_actions.py" line="6" name="test_create_cluster" time="0.006206989288330078"><system-err>[D 190919 17:53:21 actions:20] Creating EKS cluster: eks-cluster
</system-err></testcase><testcase classname="tests.eks.test_eks_actions" file="tests/eks/test_eks_actions.py" line="22" name="test_delete_cluster" time="0.009056568145751953"><system-err>[D 190919 17:53:21 actions:32] Deleting EKS cluster: eks-cluster
</system-err></testcase><testcase classname="tests.eks.test_eks_probes" file="tests/eks/test_eks_probes.py" line="6" name="test_describe_cluster" time="0.05401921272277832"><system-err>[D 190919 17:53:21 probes:17] Describing EKS cluster: eks-cluster
</system-err></testcase><testcase classname="tests.eks.test_eks_probes" file="tests/eks/test_eks_probes.py" line="15" name="test_describe_missing_cluster" time="0.006478071212768555"><system-err>[D 190919 17:53:21 probes:17] Describing EKS cluster: eks-cluster
</system-err></testcase><testcase classname="tests.eks.test_eks_probes" file="tests/eks/test_eks_probes.py" line="27" name="test_list_clusters" time="0.005988121032714844"><system-err>[D 190919 17:53:21 probes:30] Listing EKS clusters
</system-err></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="8" name="test_reboot_cache_clusters_invalid" time="0.0023560523986816406"></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="15" name="test_delete_cache_clusters_no_cluster" time="0.0026323795318603516"></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="22" name="test_reboot_cache_clusters_select_nodes" time="0.006535053253173828"></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="56" name="test_reboot_cache_clusters_all_nodes" time="0.006876230239868164"></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="89" name="test_delete_cache_clusters_snapshot" time="0.005833148956298828"><system-err>[D 190919 17:53:21 actions:56] Deleting Cache Cluster: MyTestCacheCluster.
</system-err></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="121" name="test_delete_cache_clusters_no_snapshot" time="0.006838083267211914"><system-err>[D 190919 17:53:21 actions:56] Deleting Cache Cluster: MyTestCacheCluster.
</system-err></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="151" name="test_delete_replication_group_snapshot" time="0.007550716400146484"><system-err>[D 190919 17:53:21 actions:85] Deleting Replication Group: MyRedisReplicationGroup
[D 190919 17:53:21 actions:87] Deleting only read replicas.
</system-err></testcase><testcase classname="tests.elasticache.test_elasticache_actions" file="tests/elasticache/test_elasticache_actions.py" line="182" name="test_delete_replication_group_no_snapshot" time="0.007421731948852539"><system-err>[D 190919 17:53:21 actions:85] Deleting Replication Group: MyRedisReplicationGroup
[D 190919 17:53:21 actions:87] Deleting only read replicas.
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="10" name="test_deregister_target" time="0.009356975555419922"><system-err>[D 190919 17:53:21 actions:209] Target group name(s): [&apos;TestTargetGroup1&apos;] Looking for ARN
[D 190919 17:53:21 actions:215] Target groups ARN: {&apos;TestTargetGroup1&apos;: &apos;\n    arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n    &apos;}
[D 190919 17:53:21 actions:234] Target group ARN: {&apos;TestTargetGroup1&apos;: &apos;\n    arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n    &apos;} Getting health descriptions
[D 190919 17:53:21 actions:244] Health descriptions for target group(s) are: {&apos;TestTargetGroup1&apos;: {&apos;TargetGroupArn&apos;: &apos;\n    arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n    &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;Target&apos;: {&apos;Id&apos;: &apos;i-0123456789abcdef0&apos;}}]}}
[D 190919 17:53:21 actions:30] Deregistering target i-0123456789abcdef0 from target group TestTargetGroup1
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="35" name="test_set_security_groups" time="0.013898611068725586"><system-err>[D 190919 17:53:21 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;, &apos;test-loadbalancer-02&apos;].
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="85" name="test_set_security_groups_invalid_alb_type" time="0.007948160171508789"><system-err>[D 190919 17:53:21 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;, &apos;test-loadbalancer-02&apos;].
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="124" name="test_set_security_group_invalid_alb_name" time="0.010090112686157227"><system-err>[D 190919 17:53:21 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;, &apos;test-loadbalancer-02&apos;].
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="156" name="test_set_security_groups_invalid_group" time="0.006048679351806641"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="175" name="test_set_security_group_no_subnets" time="0.002143383026123047"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="183" name="test_set_security_group_no_args" time="0.0015232563018798828"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="190" name="test_set_subnets" time="0.0057735443115234375"><system-err>[D 190919 17:53:22 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;, &apos;test-loadbalancer-02&apos;].
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="240" name="test_set_subnets_invalid_alb_type" time="0.005448341369628906"><system-err>[D 190919 17:53:22 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;, &apos;test-loadbalancer-02&apos;].
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="279" name="test_set_subnets_invalid_alb_name" time="0.005451202392578125"><system-err>[D 190919 17:53:22 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;, &apos;test-loadbalancer-02&apos;].
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="311" name="test_set_subnets_invalid_subnet" time="0.004736900329589844"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="329" name="test_set_subnet_no_subnets" time="0.0018339157104492188"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="338" name="test_set_subnet_no_args" time="0.00261688232421875"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="345" name="test_delete_load_balancer_invalid" time="0.0022263526916503906"></testcase><testcase classname="tests.elbv2.test_elbv2_actions" file="tests/elbv2/test_elbv2_actions.py" line="352" name="test_delete_load_balancr" time="0.007188081741333008"><system-err>[D 190919 17:53:22 actions:166] Searching for load balancer name(s): [&apos;test-loadbalancer-01&apos;].
[D 190919 17:53:22 actions:146] Deleting load balancer arn:aws:elasticloadbalancing:us-east-1:000000000000:loadbalancer/app/test-loadbalancer-01/0f158eab895ab000
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_probes" file="tests/elbv2/test_elbv2_probes.py" line="9" name="test_targets_health_count" time="0.012307882308959961"><system-err>[D 190919 17:53:22 probes:137] Looking for number of health targets for targetgroups: [&apos;TestTargetGroup1&apos;, &apos;TestTargetGroup2&apos;]
[D 190919 17:53:22 probes:83] Target group name(s): [&apos;TestTargetGroup1&apos;, &apos;TestTargetGroup2&apos;] Looking for ARN
[D 190919 17:53:22 probes:89] Target groups ARNs: {&apos;TestTargetGroup1&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TestTargetGroup2&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;}
[D 190919 17:53:22 probes:108] Target group ARN: {&apos;TestTargetGroup1&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TestTargetGroup2&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;} Getting health descriptions
[D 190919 17:53:22 probes:118] Health descriptions for target group(s) are: {&apos;TestTargetGroup1&apos;: {&apos;TargetGroupArn&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;TargetHealth&apos;: {&apos;State&apos;: &apos;healthy&apos;}}]}, &apos;TestTargetGroup2&apos;: {&apos;TargetGroupArn&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;TargetHealth&apos;: {&apos;State&apos;: &apos;unhealthy&apos;}}]}}
[D 190919 17:53:22 probes:149] Healthy targets by targetgroup: {&apos;TestTargetGroup1&apos;: {&apos;healthy&apos;: 1}, &apos;TestTargetGroup2&apos;: {&apos;unhealthy&apos;: 1}}
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_probes" file="tests/elbv2/test_elbv2_probes.py" line="45" name="test_all_targets_healthy_true" time="0.00780487060546875"><system-err>[D 190919 17:53:22 probes:47] Checking if all targets are healthy for targets: [&apos;TestTargetGroup1&apos;, &apos;TestTargetGroup2&apos;]
[D 190919 17:53:22 probes:83] Target group name(s): [&apos;TestTargetGroup1&apos;, &apos;TestTargetGroup2&apos;] Looking for ARN
[D 190919 17:53:22 probes:89] Target groups ARNs: {&apos;TestTargetGroup1&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TestTargetGroup2&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;}
[D 190919 17:53:22 probes:108] Target group ARN: {&apos;TestTargetGroup1&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TestTargetGroup2&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;} Getting health descriptions
[D 190919 17:53:22 probes:118] Health descriptions for target group(s) are: {&apos;TestTargetGroup1&apos;: {&apos;TargetGroupArn&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;TargetHealth&apos;: {&apos;State&apos;: &apos;healthy&apos;}}]}, &apos;TestTargetGroup2&apos;: {&apos;TargetGroupArn&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;TargetHealth&apos;: {&apos;State&apos;: &apos;healthy&apos;}}]}}
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_probes" file="tests/elbv2/test_elbv2_probes.py" line="80" name="test_all_targets_healthy_false" time="0.015202045440673828"><system-err>[D 190919 17:53:22 probes:47] Checking if all targets are healthy for targets: [&apos;TestTargetGroup1&apos;, &apos;TestTargetGroup2&apos;]
[D 190919 17:53:22 probes:83] Target group name(s): [&apos;TestTargetGroup1&apos;, &apos;TestTargetGroup2&apos;] Looking for ARN
[D 190919 17:53:22 probes:89] Target groups ARNs: {&apos;TestTargetGroup1&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TestTargetGroup2&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;}
[D 190919 17:53:22 probes:108] Target group ARN: {&apos;TestTargetGroup1&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TestTargetGroup2&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;} Getting health descriptions
[D 190919 17:53:22 probes:118] Health descriptions for target group(s) are: {&apos;TestTargetGroup1&apos;: {&apos;TargetGroupArn&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup1/1234567890abcdef\n            &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;TargetHealth&apos;: {&apos;State&apos;: &apos;healthy&apos;}}]}, &apos;TestTargetGroup2&apos;: {&apos;TargetGroupArn&apos;: &apos;\n            arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/TestTargetGroup2/234567890abcdef0\n            &apos;, &apos;TargetHealthDescriptions&apos;: [{&apos;TargetHealth&apos;: {&apos;State&apos;: &apos;unhealthy&apos;}}]}}
</system-err></testcase><testcase classname="tests.elbv2.test_elbv2_probes" file="tests/elbv2/test_elbv2_probes.py" line="115" name="test_targets_health_count_needs_tg_names" time="0.002035856246948242"></testcase><testcase classname="tests.elbv2.test_elbv2_probes" file="tests/elbv2/test_elbv2_probes.py" line="121" name="test_all_targets_healthy_needs_tg_names" time="0.0016009807586669922"></testcase><testcase classname="tests.iam.test_iam_actions" file="tests/iam/test_iam_actions.py" line="8" name="test_create_policy" time="0.005789041519165039"></testcase><testcase classname="tests.iam.test_iam_actions" file="tests/iam/test_iam_actions.py" line="31" name="test_attach_role_policy" time="0.0057756900787353516"></testcase><testcase classname="tests.iam.test_iam_actions" file="tests/iam/test_iam_actions.py" line="43" name="test_detach_role_policy" time="0.005227804183959961"></testcase><testcase classname="tests.iam.test_iam_probes" file="tests/iam/test_iam_probes.py" line="6" name="test_get_role_policy" time="0.005410909652709961"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="12" name="test_failover_db_cluster" time="0.004826068878173828"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="23" name="test_failover_db_cluster_with_instance_identifier" time="0.005173683166503906"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="35" name="test_failover_db_cluster_empty_string" time="0.0043125152587890625"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="44" name="test_failover_db_cluster_exception" time="0.004942893981933594"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="55" name="test_reboot_db_instance" time="0.004746198654174805"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="66" name="test_reboot_db_instance_empty_string" time="0.004591703414916992"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="75" name="test_reboot_db_instance_exception" time="0.009207010269165039"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="86" name="test_stop_db_instance" time="0.005120754241943359"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="95" name="test_stop_db_instance_snapshot" time="0.004633665084838867"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="107" name="test_stop_db_instance_exception" time="0.002271413803100586"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="114" name="test_stop_db_cluster" time="0.004694938659667969"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="123" name="test_stop_db_cluster_exception" time="0.0018529891967773438"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="130" name="test_delete_db_instance" time="0.00463104248046875"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="147" name="test_delete_db_instance_snapshot" time="0.004822492599487305"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="165" name="test_delete_db_instance_no_snapshot" time="0.00573420524597168"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="179" name="test_delete_db_cluster" time="0.005264759063720703"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="195" name="test_delete_db_cluster_snapshot" time="0.006940364837646484"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="212" name="test_delete_db_cluster_no_snapshot" time="0.01583409309387207"></testcase><testcase classname="tests.rds.test_rds_actions" file="tests/rds/test_rds_actions.py" line="225" name="test_delete_db_cluster_endpoint" time="0.005583763122558594"></testcase></testsuite>